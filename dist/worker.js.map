{
  "version": 3,
  "sources": ["../node_modules/js-sha256/src/sha256.js", "../src/sha224.js", "../src/addressHandle.js", "../src/crawler.js", "../src/base64.js", "../src/output.js", "../src/worker.js"],
  "sourceRoot": "dist",
  "sourcesContent": ["/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.11.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2024\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = require('crypto')\n    var Buffer = require('buffer').Buffer;\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var bufferFrom;\n    if (Buffer.from && !root.JS_SHA256_NO_BUFFER_FROM) {\n      bufferFrom = Buffer.from;\n    } else {\n      bufferFrom = function (message) {\n        return new Buffer(message);\n      };\n    }\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(bufferFrom(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        this.block = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >>> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >>> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >>> 2] |= (0xc0 | (code >>> 6)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >>> 2] |= (0xe0 | (code >>> 12)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >>> 2] |= (0xf0 | (code >>> 18)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >>> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n      this.chromeBugWorkAround = true;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >>> 28) & 0x0F] + HEX_CHARS[(h0 >>> 24) & 0x0F] +\n      HEX_CHARS[(h0 >>> 20) & 0x0F] + HEX_CHARS[(h0 >>> 16) & 0x0F] +\n      HEX_CHARS[(h0 >>> 12) & 0x0F] + HEX_CHARS[(h0 >>> 8) & 0x0F] +\n      HEX_CHARS[(h0 >>> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >>> 28) & 0x0F] + HEX_CHARS[(h1 >>> 24) & 0x0F] +\n      HEX_CHARS[(h1 >>> 20) & 0x0F] + HEX_CHARS[(h1 >>> 16) & 0x0F] +\n      HEX_CHARS[(h1 >>> 12) & 0x0F] + HEX_CHARS[(h1 >>> 8) & 0x0F] +\n      HEX_CHARS[(h1 >>> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >>> 28) & 0x0F] + HEX_CHARS[(h2 >>> 24) & 0x0F] +\n      HEX_CHARS[(h2 >>> 20) & 0x0F] + HEX_CHARS[(h2 >>> 16) & 0x0F] +\n      HEX_CHARS[(h2 >>> 12) & 0x0F] + HEX_CHARS[(h2 >>> 8) & 0x0F] +\n      HEX_CHARS[(h2 >>> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >>> 28) & 0x0F] + HEX_CHARS[(h3 >>> 24) & 0x0F] +\n      HEX_CHARS[(h3 >>> 20) & 0x0F] + HEX_CHARS[(h3 >>> 16) & 0x0F] +\n      HEX_CHARS[(h3 >>> 12) & 0x0F] + HEX_CHARS[(h3 >>> 8) & 0x0F] +\n      HEX_CHARS[(h3 >>> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >>> 28) & 0x0F] + HEX_CHARS[(h4 >>> 24) & 0x0F] +\n      HEX_CHARS[(h4 >>> 20) & 0x0F] + HEX_CHARS[(h4 >>> 16) & 0x0F] +\n      HEX_CHARS[(h4 >>> 12) & 0x0F] + HEX_CHARS[(h4 >>> 8) & 0x0F] +\n      HEX_CHARS[(h4 >>> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >>> 28) & 0x0F] + HEX_CHARS[(h5 >>> 24) & 0x0F] +\n      HEX_CHARS[(h5 >>> 20) & 0x0F] + HEX_CHARS[(h5 >>> 16) & 0x0F] +\n      HEX_CHARS[(h5 >>> 12) & 0x0F] + HEX_CHARS[(h5 >>> 8) & 0x0F] +\n      HEX_CHARS[(h5 >>> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >>> 28) & 0x0F] + HEX_CHARS[(h6 >>> 24) & 0x0F] +\n      HEX_CHARS[(h6 >>> 20) & 0x0F] + HEX_CHARS[(h6 >>> 16) & 0x0F] +\n      HEX_CHARS[(h6 >>> 12) & 0x0F] + HEX_CHARS[(h6 >>> 8) & 0x0F] +\n      HEX_CHARS[(h6 >>> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >>> 28) & 0x0F] + HEX_CHARS[(h7 >>> 24) & 0x0F] +\n        HEX_CHARS[(h7 >>> 20) & 0x0F] + HEX_CHARS[(h7 >>> 16) & 0x0F] +\n        HEX_CHARS[(h7 >>> 12) & 0x0F] + HEX_CHARS[(h7 >>> 8) & 0x0F] +\n        HEX_CHARS[(h7 >>> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >>> 24) & 0xFF, (h0 >>> 16) & 0xFF, (h0 >>> 8) & 0xFF, h0 & 0xFF,\n      (h1 >>> 24) & 0xFF, (h1 >>> 16) & 0xFF, (h1 >>> 8) & 0xFF, h1 & 0xFF,\n      (h2 >>> 24) & 0xFF, (h2 >>> 16) & 0xFF, (h2 >>> 8) & 0xFF, h2 & 0xFF,\n      (h3 >>> 24) & 0xFF, (h3 >>> 16) & 0xFF, (h3 >>> 8) & 0xFF, h3 & 0xFF,\n      (h4 >>> 24) & 0xFF, (h4 >>> 16) & 0xFF, (h4 >>> 8) & 0xFF, h4 & 0xFF,\n      (h5 >>> 24) & 0xFF, (h5 >>> 16) & 0xFF, (h5 >>> 8) & 0xFF, h5 & 0xFF,\n      (h6 >>> 24) & 0xFF, (h6 >>> 16) & 0xFF, (h6 >>> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >>> 24) & 0xFF, (h7 >>> 16) & 0xFF, (h7 >>> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >>> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >>> 12));\n          bytes[index++] = (0x80 | ((code >>> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >>> 18));\n          bytes[index++] = (0x80 | ((code >>> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >>> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n", "// npm install js-sha256\r\nconst sha224 = require('js-sha256').sha224;\r\n\r\n/**\r\n * \u4F7F\u7528SHA-224\u7B97\u6CD5\u5BF9\u5B57\u7B26\u4E32\u8FDB\u884C\u52A0\u5BC6\r\n *\r\n * @param {string} str \u9700\u8981\u52A0\u5BC6\u7684\u539F\u59CB\u5B57\u7B26\u4E32\u3002\r\n * @return {string} \u8FD4\u56DE\u4F7F\u7528SHA-224\u7B97\u6CD5\u52A0\u5BC6\u540E\u7684\u6563\u5217\u5B57\u7B26\u4E32\u3002\r\n */\r\nfunction hash224encrypt(str) {\r\n\treturn sha224(str);\r\n}\r\n\r\nfunction isValidSHA224(hash) {\r\n\tconst sha224Regex = /^[0-9a-f]{56}$/i;\r\n\treturn sha224Regex.test(hash);\r\n}\r\n\r\nmodule.exports = {\r\n\thash224encrypt,\r\n\tisValidSHA224,\r\n};\r\n", "/**\r\n * \u5C06\u4E00\u4E2A\u6570\u7EC4\u5206\u5272\u6210\u591A\u4E2A\u6307\u5B9A\u5927\u5C0F\u7684\u5B50\u6570\u7EC4\u3002\r\n * @param {Array} array - \u9700\u8981\u5206\u5272\u7684\u539F\u59CB\u6570\u7EC4\u3002\r\n * @param {number} chunkSize - \u6307\u5B9A\u7684\u5B50\u6570\u7EC4\u5927\u5C0F\u3002\r\n * @returns {Array} \u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u591A\u4E2A\u6307\u5B9A\u5927\u5C0F\u5B50\u6570\u7EC4\u7684\u6570\u7EC4\u3002\r\n */\r\nfunction splitArray(array, chunkSize) {\r\n\tconst chunks = [];\r\n\tlet index = 0;\r\n\twhile (index < array.length) {\r\n\t\tchunks.push(array.slice(index, index + chunkSize));\r\n\t\tindex += chunkSize;\r\n\t}\r\n\treturn chunks;\r\n}\r\n\r\n/**\r\n * \u5C06\u6570\u7EC4\u5E73\u5747\u5206\u5272\u6210\u591A\u4E2A\u5C0F\u6570\u7EC4\u3002\r\n * @param {Array} array - \u9700\u8981\u5206\u5272\u7684\u539F\u59CB\u6570\u7EC4\u3002\r\n * @param {number} maxChunkSize - \u6700\u5927\u5757\u5927\u5C0F\uFF0C\u5206\u5272\u540E\u6BCF\u4E2A\u5757\u7684\u6700\u5927\u957F\u5EA6\u3002\r\n * @returns {Array} \u8FD4\u56DE\u7531\u5E73\u5747\u5206\u5272\u540E\u7684\u5B50\u6570\u7EC4\u7EC4\u6210\u7684\u6570\u7EC4\u3002\r\n */\r\nfunction splitArrayEvenly(array, maxChunkSize) {\r\n\tconst totalLength = array.length;\r\n\tconst numChunks = Math.ceil(totalLength / maxChunkSize);\r\n\tconst chunkSize = Math.ceil(totalLength / numChunks);\r\n\treturn splitArray(array, chunkSize);\r\n}\r\n\r\n// \u68C0\u67E5\u662F\u5426\u4E3A\uFF1A(\u5B50)\u57DF\u540D\u3001IPv4\u3001[IPv6]\u3001(\u5B50)\u57DF\u540D:\u7AEF\u53E3\u3001IPv4:\u7AEF\u53E3\u3001[IPv6]:\u7AEF\u53E3\r\nfunction isValidlandingAddr(ip) {\r\n\tvar reg =\r\n\t\t/^(?:(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}(?::\\d{1,5})?|(?:(?:\\d{1,3}\\.){3}\\d{1,3})(?::\\d{1,5})?|(?:\\[[0-9a-fA-F:]+\\])(?::\\d{1,5})?)$/;\r\n\treturn reg.test(ip);\r\n}\r\n\r\n// \u89E3\u6790Host\u548CPort\uFF0C\u652F\u6301\u683C\u5F0F\uFF1A(\u5B50)\u57DF\u540D\u3001IPv4\u3001[IPv6]\u3001(\u5B50)\u57DF\u540D:\u7AEF\u53E3\u3001IPv4:\u7AEF\u53E3\u3001[IPv6]:\u7AEF\u53E3\r\nfunction parselandingAddr(address) {\r\n\t\r\n\tconst regex =\r\n\t\t/^(?:(?<domain>(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,})(?::(?<port>\\d{1,5}))?|(?<ipv4>(?:\\d{1,3}\\.){3}\\d{1,3})(?::(?<port_ipv4>\\d{1,5}))?|(?<ipv6>\\[[0-9a-fA-F:]+\\])(?::(?<port_ipv6>\\d{1,5}))?)$/;\r\n\r\n\tconst match = address.match(regex);\r\n\r\n\tif (match) {\r\n\t\tlet host = match.groups.domain || match.groups.ipv4 || match.groups.ipv6;\r\n\t\tlet port = match.groups.port || match.groups.port_ipv4 || match.groups.port_ipv6 || undefined;\r\n\r\n\t\treturn { host, port };\r\n\t} else {\r\n\t\treturn { host: '', undefined };\r\n\t}\r\n}\r\n\r\nfunction getRandomElement(array) {\r\n\tconst randomIndex = Math.floor(Math.random() * array.length);\r\n\treturn array[randomIndex];\r\n}\r\n\r\nmodule.exports = {\r\n\tisValidlandingAddr,\r\n\tparselandingAddr,\r\n\tsplitArrayEvenly,\r\n\tgetRandomElement,\r\n};\r\n", "/**\r\n * \u5F02\u6B65\u51FD\u6570\uFF1A\u4F7F\u7528\u63D0\u4F9B\u7684GitHub\u8BBF\u95EE\u4EE4\u724C(token)\u548C\u5176\u4ED6\u53C2\u6570\uFF0C\u4ECE\u6307\u5B9A\u7684\u4ED3\u5E93\u4E2D\u83B7\u53D6\u6587\u4EF6\u5185\u5BB9\u3002\r\n *\r\n * @param {string} token - GitHub\u8BBF\u95EE\u4EE4\u724C\uFF0C\u7528\u4E8E\u6388\u6743\u8BF7\u6C42\u3002\r\n * @param {string} owner - \u4ED3\u5E93\u6240\u6709\u8005\u7684\u7528\u6237\u540D\u3002\r\n * @param {string} repo - \u4ED3\u5E93\u540D\u79F0\u3002\r\n * @param {string} filePath - \u8981\u83B7\u53D6\u7684\u6587\u4EF6\u8DEF\u5F84\u3002\r\n * @param {string} branch - \u6587\u4EF6\u6240\u5728\u7684\u5206\u652F\u540D\u79F0\u3002\r\n * @returns {Object} - \u5305\u542B\u6587\u4EF6\u5185\u5BB9\u548C\u5185\u5BB9\u7C7B\u578B\u7684\u5BF9\u8C61\u3002\u5982\u679C\u8BF7\u6C42\u5931\u8D25\uFF0C\u5185\u5BB9\u4E3A\u7A7A\u5B57\u7B26\u4E32\u3002\r\n */\r\nasync function fetchGitHubFile(token, owner, repo, filePath, branch = 'main') {\r\n\tconst githubUrl = `https://api.github.com/repos/${owner}/${repo}/contents/${filePath}?ref=${branch}`;\r\n\r\n\ttry {\r\n\t\t// \u53D1\u8D77GET\u8BF7\u6C42\u5230GitHub API\uFF0C\u83B7\u53D6\u6587\u4EF6\u5185\u5BB9\r\n\t\tconst response = await fetch(githubUrl, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `token ${token}`,\r\n\t\t\t\tAccept: 'application/vnd.github.v3.raw',\r\n\t\t\t\t'User-Agent': 'Cloudflare Worker',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tif (!response.ok) {\r\n\t\t\treturn {\r\n\t\t\t\tbody: '',\r\n\t\t\t\tcontentType: 'text/plain; charset=utf-8',\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// \u4ECE\u54CD\u5E94\u5934\u4E2D\u83B7\u53D6\u5B9E\u9645\u7684\u5185\u5BB9\u7C7B\u578B\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u5219\u9ED8\u8BA4\u4E3A\u4E8C\u8FDB\u5236\u6D41\u7C7B\u578B\r\n\t\tconst contentType = response.headers.get('Content-Type') || 'application/octet-stream';\r\n\r\n\t\t// \u5C06\u54CD\u5E94\u5185\u5BB9\u8F6C\u6362\u4E3AArrayBuffer\u683C\u5F0F\uFF0C\u4EE5\u4FBF\u4E8E\u540E\u7EED\u5904\u7406\r\n\t\tconst body = await response.arrayBuffer();\r\n\r\n\t\treturn {\r\n\t\t\tbody: body,\r\n\t\t\tcontentType: contentType,\r\n\t\t};\r\n\t} catch (error) {\r\n\t\treturn {\r\n\t\t\tbody: '',\r\n\t\t\tcontentType: 'text/plain; charset=utf-8',\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {string} ipaddrURL - \u8981\u6293\u53D6\u7F51\u9875\u7684\u5185\u5BB9\r\n * @returns {string} - \u8FD4\u56DE\u7F51\u9875\u7684\u5168\u90E8\u5185\u5BB9\r\n */\r\nasync function fetchWebPageContent(URL) {\r\n\ttry {\r\n\t\tconst response = await fetch(URL);\r\n\t\tif (!response.ok) {\r\n\t\t\tthrow new Error(`Failed to get: ${response.status}`);\r\n\t\t\treturn '';\r\n\t\t} else {\r\n\t\t\treturn await response.text();\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(`Failed to fetch ${URL} web conten: ${err.message}`);\r\n\t\treturn '';\r\n\t}\r\n}\r\n\r\nmodule.exports = {\r\n\tfetchGitHubFile,\r\n\tfetchWebPageContent,\r\n};\r\n", "/**\r\n * \u5C06UTF8\u5B57\u7B26\u4E32\u8FDB\u884CBase64\u52A0\u5BC6\r\n *\r\n * \u8BE5\u51FD\u6570\uFF0C\u9002\u5408bytes\u6570\u7EC4\u957F\u5EA6\u8FC7\u5927\uFF08\u5982\u8D85\u8FC7\u6570\u4E07\u4E2A\u5B57\u8282\uFF09\u7684\uFF0C\r\n * \u5DF2\u89E3\u51B3\u4E86 \"RangeError: Maximum call stack size exceeded\" \u9519\u8BEF\uFF0C\r\n * \u4E5F\u5C31\u662F\u8BE5\u51FD\u6570\u89E3\u51B3\u4E86\u8D85\u51FA\u8C03\u7528\u6808\u7684\u6700\u5927\u9650\u5236\u9519\u8BEF\r\n * @param {*} str\r\n * @returns\r\n */\r\nfunction base64Encode(str) {\r\n\tlet encoder = new TextEncoder();\r\n\tlet bytes = encoder.encode(str);\r\n\tlet binary = Array.from(bytes, (byte) => String.fromCharCode(byte)).join('');\r\n\treturn btoa(binary);\r\n}\r\n\r\n// \u5C06base64\u52A0\u5BC6\u7684\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u6B63\u7ECF\u7684\u5B57\u7B26\u4E32\r\nfunction base64Decode(base64Str) {\r\n\tlet binary = atob(base64Str);\r\n\tlet bytes = new Uint8Array([...binary].map((char) => char.charCodeAt(0)));\r\n\tlet decoder = new TextDecoder();\r\n\treturn decoder.decode(bytes);\r\n}\r\n\r\nmodule.exports = {\r\n\tbase64Encode,\r\n\tbase64Decode,\r\n};\r\n", "const { getRandomElement } = require('./addressHandle');\r\nconst { base64Encode, base64Decode } = require('./base64');\r\n\r\nfunction getBaseConfig(pswd, host) {\r\n\tconst server = 'www.visa.com.sg';\r\n\tconst base64Link =\r\n\t\t'dHJvamFuOi8vI3Bhc3N3b3JkI0AjYWRkcmVzcyM6I3BvcnQjP3NlY3VyaXR5PSNvblRscyMmdHlwZT13cyZob3N0PSNob3N0IyZwYXRoPSUyRiMjYWRkcmVzcyM';\r\n\tconst base64Yaml =\r\n\t\t'LSB0eXBlOiB0cm9qYW4NCiAgbmFtZTogI2FkZHJlc3MjDQogIHNlcnZlcjogI2FkZHJlc3MjDQogIHBvcnQ6ICNwb3J0Iw0KICBwYXNzd29yZDogI3Bhc3N3b3JkIw0KICBuZXR3b3JrOiB3cw0KICB1ZHA6IGZhbHNlDQogIHNuaTogI2hvc3QjDQogIGNsaWVudC1maW5nZXJwcmludDogY2hyb21lDQogIHNraXAtY2VydC12ZXJpZnk6IHRydWUNCiAgd3Mtb3B0czoNCiAgICBwYXRoOiAvDQogICAgaGVhZGVyczoNCiAgICAgIEhvc3Q6ICNob3N0Iw';\r\n\tconst base64Json =\r\n\t\t'ew0KICAib3V0Ym91bmRzIjogWw0KICAgIHsNCiAgICAgICJuZXR3b3JrIjogInRjcCIsDQogICAgICAicGFzc3dvcmQiOiAiI3Bhc3N3b3JkIyIsDQogICAgICAic2VydmVyIjogIiNhZGRyZXNzIyIsDQogICAgICAic2VydmVyX3BvcnQiOiAjcG9ydCMsDQogICAgICAidGFnIjogIiNhZGRyZXNzIzojcG9ydCMiLA0KICAgICAgInRscyI6IHsNCiAgICAgICAgImVuYWJsZWQiOiAjb25UbHMjLA0KICAgICAgICAiaW5zZWN1cmUiOiB0cnVlLA0KICAgICAgICAic2VydmVyX25hbWUiOiAiI2hvc3QjIiwNCiAgICAgICAgInV0bHMiOiB7DQogICAgICAgICAgImVuYWJsZWQiOiB0cnVlLA0KICAgICAgICAgICJmaW5nZXJwcmludCI6ICJjaHJvbWUiDQogICAgICAgIH0NCiAgICAgIH0sDQogICAgICAidHJhbnNwb3J0Ijogew0KICAgICAgICAiZWFybHlfZGF0YV9oZWFkZXJfbmFtZSI6ICJTZWMtV2ViU29ja2V0LVByb3RvY29sIiwNCiAgICAgICAgImhlYWRlcnMiOiB7DQogICAgICAgICAgIkhvc3QiOiAiI2hvc3QjIg0KICAgICAgICB9LA0KICAgICAgICAicGF0aCI6ICIvIiwNCiAgICAgICAgInR5cGUiOiAid3MiDQogICAgICB9LA0KICAgICAgInR5cGUiOiAidHJvamFuIg0KICAgIH0NCiAgXQ0KfQ';\r\n\tconst isCFworkersDomain = host.endsWith(base64Decode('d29ya2Vycy5kZXY')) ? true : false;\r\n\tconst port = isCFworkersDomain ? 8080 : 443;\r\n\tconst replacements = {\r\n\t\t'#password#': pswd,\r\n\t\t'#address#': server,\r\n\t\t'#port#': port,\r\n\t\t'#host#': host,\r\n\t};\r\n\t// \u4F7F\u7528(\u6B63\u5219+\u56DE\u8C03)\u66FF\u6362\u5BF9\u5E94\u7684\u5B57\u7B26\u4E32\uFF0C\u751F\u6210v2ray\u5206\u4EAB\u94FE\u63A5\r\n\tconst regex1 = new RegExp(Object.keys(replacements).concat('#onTls#').join('|'), 'g');\r\n\tconst finallyLink = base64Decode(base64Link).replace(regex1, (match) => {\r\n\t\tif (match === '#onTls#') {\r\n\t\t\treturn isCFworkersDomain ? 'none' : base64Decode('dGxzJnNuaT0jaG9zdCMmZnA9Y2hyb21lJmFsbG93SW5zZWN1cmU9MQ').replace('#host#', host);\r\n\t\t}\r\n\t\treturn replacements[match];\r\n\t});\r\n\t// \u4F7F\u7528(\u6B63\u5219+\u56DE\u8C03)\u66FF\u6362\u5BF9\u5E94\u7684\u5B57\u7B26\u4E32\uFF0C\u751F\u6210clash\u7684\u914D\u7F6E\u4FE1\u606F\r\n\tconst regex2 = new RegExp(Object.keys(replacements).join('|'), 'g');\r\n\tconst finallyYaml = base64Decode(base64Yaml).replace(regex2, (match) => replacements[match]);\r\n\t// \u4F7F\u7528(\u6B63\u5219+\u56DE\u8C03)\u66FF\u6362\u5BF9\u5E94\u7684\u5B57\u7B26\u4E32\uFF0C\u751F\u6210sing-box\u7684\u914D\u7F6E\u4FE1\u606F\r\n\tconst finallyJson = base64Decode(base64Json).replace(regex1, (match) => {\r\n\t\tif (match === '#onTls#') {\r\n\t\t\treturn isCFworkersDomain ? false : true;\r\n\t\t}\r\n\t\treturn replacements[match];\r\n\t});\r\n\r\n\treturn `\r\n####################################################################################################################\r\n${base64Decode('djJyYXk')}\r\n--------------------------------------------------------------------------------------------------------------------\r\n${finallyLink}\r\n--------------------------------------------------------------------------------------------------------------------\r\n####################################################################################################################\r\n${base64Decode('c2luZy1ib3g')}\r\n--------------------------------------------------------------------------------------------------------------------\r\n${finallyJson}\r\n--------------------------------------------------------------------------------------------------------------------\r\n####################################################################################################################\r\n${base64Decode('Y2xhc2gubWV0YSAodHJvamFuK3dzK3Rscyk')}\r\n--------------------------------------------------------------------------------------------------------------------\r\n${finallyYaml}\r\n--------------------------------------------------------------------------------------------------------------------\r\n####################################################################################################################\r\n\t`;\r\n}\r\n\r\n// \u751F\u6210v2ray\u7684\u5206\u4EAB\u94FE\u63A5\r\nfunction buildLinks(ipsArrayChunked, hostName, pswd, defaultPort, HTTP_WITH_PORTS, HTTPS_WITH_PORTS) {\r\n\tlet LinkArray = [];\r\n\tconst base64Link =\r\n\t\t'dHJvamFuOi8vI3Bhc3N3b3JkI0AjYWRkcmVzcyM6I3BvcnQjP3NlY3VyaXR5PSNvblRscyMmdHlwZT13cyZob3N0PSNob3N0IyZwYXRoPSUyRiMjcmVtYXJrcyM';\r\n\tconst isCFworkersDomain = hostName.endsWith(base64Decode('d29ya2Vycy5kZXY')) ? true : false;\r\n\tfor (let addr of ipsArrayChunked) {\r\n\t\tif (!addr) continue;\r\n\t\tlet randomHttpPort = getRandomElement(HTTP_WITH_PORTS);\r\n\t\tlet randomHttpsPort = getRandomElement(HTTPS_WITH_PORTS);\r\n\t\tlet port =\r\n\t\t\t([0, ...HTTPS_WITH_PORTS].includes(Number(defaultPort)) && isCFworkersDomain) ||\r\n\t\t\t([0, ...HTTP_WITH_PORTS].includes(Number(defaultPort)) && !isCFworkersDomain)\r\n\t\t\t\t? isCFworkersDomain\r\n\t\t\t\t\t? randomHttpPort\r\n\t\t\t\t\t: randomHttpsPort\r\n\t\t\t\t: defaultPort;\r\n\t\tlet remarks = `cfwks-${addr}:${port}`;\r\n\t\tconst replacements = {\r\n\t\t\t'#password#': pswd,\r\n\t\t\t'#address#': addr,\r\n\t\t\t'#port#': port,\r\n\t\t\t'#host#': hostName,\r\n\t\t\t'#remarks#': remarks,\r\n\t\t};\r\n\t\t// \u4F7F\u7528(\u6B63\u5219+\u56DE\u8C03)\u66FF\u6362\u5BF9\u5E94\u7684\u5B57\u7B26\u4E32\uFF0C\u751F\u6210v2ray\u5206\u4EAB\u94FE\u63A5\r\n\t\tconst regex = new RegExp(Object.keys(replacements).concat('#onTls#').join('|'), 'g');\r\n\t\tconst finallyLink = base64Decode(base64Link).replace(regex, (match) => {\r\n\t\t\tif (match === '#onTls#') {\r\n\t\t\t\treturn isCFworkersDomain ? 'none' : base64Decode('dGxzJnNuaT0jaG9zdCMmZnA9Y2hyb21lJmFsbG93SW5zZWN1cmU9MQ').replace('#host#', host);\r\n\t\t\t}\r\n\t\t\treturn replacements[match];\r\n\t\t});\r\n\t\tif (!LinkArray.includes(finallyLink)) {\r\n\t\t\tLinkArray.push(finallyLink);\r\n\t\t}\r\n\t}\r\n\treturn base64Encode(LinkArray.join('\\n')); // base64\u52A0\u5BC6\u8FD4\u56DE\r\n}\r\n\r\n// \u751F\u6210clash\u7684\u4EE3\u7406\u540D\u79F0\u548Cproxyies\u503C\u7684\u8282\u70B9\u4FE1\u606F\r\nfunction buildYamls(ipsArrayChunked, hostName, pswd, defaultPort, HTTP_WITH_PORTS, HTTPS_WITH_PORTS) {\r\n\tlet proxyies = [];\r\n\tlet nodeNames = [];\r\n\tconst base64Yaml =\r\n\t\t'ICAtIHsidHlwZSI6InRyb2phbiIsIm5hbWUiOiIjcmVtYXJrcyMiLCJzZXJ2ZXIiOiIjc2VydmVyIyIsInBvcnQiOiNwb3J0IywicGFzc3dvcmQiOiIjcGFzc3dvcmQjIiwibmV0d29yayI6IndzIiwidWRwIjpmYWxzZSwic25pIjoiI2hvc3ROYW1lIyIsImNsaWVudC1maW5nZXJwcmludCI6ImNocm9tZSIsInNraXAtY2VydC12ZXJpZnkiOnRydWUsIndzLW9wdHMiOnsicGF0aCI6Ii8iLCJoZWFkZXJzIjp7Ikhvc3QiOiIjaG9zdE5hbWUjIn19fQ';\r\n\tconst isCFworkersDomain = hostName.includes(base64Decode('d29ya2Vycy5kZXY')) ? true : false;\r\n\tfor (let addr of ipsArrayChunked) {\r\n\t\tif (!addr) continue;\r\n\t\tlet randomHttpPortElement = getRandomElement(HTTP_WITH_PORTS);\r\n\t\tlet randomHttpsPortElement = getRandomElement(HTTPS_WITH_PORTS);\r\n\t\tlet port =\r\n\t\t\t([0, ...HTTPS_WITH_PORTS].includes(Number(defaultPort)) && isCFworkersDomain) ||\r\n\t\t\t([0, ...HTTP_WITH_PORTS].includes(Number(defaultPort)) && !isCFworkersDomain)\r\n\t\t\t\t? isCFworkersDomain\r\n\t\t\t\t\t? randomHttpPortElement\r\n\t\t\t\t\t: randomHttpsPortElement\r\n\t\t\t\t: defaultPort;\r\n\t\tlet remarks = `cfwks-${addr}:${port}`;\r\n\t\tconst replacements = {\r\n\t\t\t'#password#': pswd,\r\n\t\t\t'#server#': addr,\r\n\t\t\t'#port#': port,\r\n\t\t\t'#hostName#': hostName,\r\n\t\t\t'#remarks#': remarks,\r\n\t\t};\r\n\r\n\t\t// \u4F7F\u7528(\u6B63\u5219+\u56DE\u8C03)\u66FF\u6362\u5BF9\u5E94\u7684\u5B57\u7B26\u4E32\uFF0C\u751F\u6210clash\u7684\u8282\u70B9\u4FE1\u606F\r\n\t\tconst regex = new RegExp(Object.keys(replacements).join('|'), 'g');\r\n\t\tconst proxyiesValue = base64Decode(base64Yaml).replace(regex, (match) => replacements[match]);\r\n\t\tif (!nodeNames.includes(remarks)) {\r\n\t\t\tproxyies.push(proxyiesValue);\r\n\t\t\tnodeNames.push(remarks);\r\n\t\t}\r\n\t}\r\n\treturn [nodeNames, proxyies];\r\n}\r\n\r\n// \u751F\u6210sing-box\u7684\u4EE3\u7406\u540D\u79F0\u548Coutbounds\u503C\u7684\u8282\u70B9\u4FE1\u606F\r\nfunction buildJsons(ipsArrayChunked, hostName, pswd, defaultPort, HTTP_WITH_PORTS, HTTPS_WITH_PORTS) {\r\n\tlet outbds = [];\r\n\tlet nodeNames = []; // \u540E\u7EED\u53EF\u4EE5\u6784\u5EFA\u5B8C\u6574\u7684\u8BA2\u9605\uFF0C\u8FD9\u91CC\u7701\u7565\u540E\u7684\uFF0C\u53EF\u4EE5\u5220\u9664\r\n\tconst base64Json =\r\n\t\t'ICAgIHsNCiAgICAgICJuZXR3b3JrIjogInRjcCIsDQogICAgICAicGFzc3dvcmQiOiAiI3Bhc3N3b3JkIyIsDQogICAgICAic2VydmVyIjogIiNzZXJ2ZXIjIiwNCiAgICAgICJzZXJ2ZXJfcG9ydCI6ICNwb3J0IywNCiAgICAgICJ0YWciOiAiI3RhZ25hbWUjIiwNCiAgICAgICJ0bHMiOiB7DQogICAgICAgICJlbmFibGVkIjogI29uVGxzIywNCiAgICAgICAgImluc2VjdXJlIjogdHJ1ZSwNCiAgICAgICAgInNlcnZlcl9uYW1lIjogIiNob3N0TmFtZSMiLA0KICAgICAgICAidXRscyI6IHsNCiAgICAgICAgICAiZW5hYmxlZCI6IHRydWUsDQogICAgICAgICAgImZpbmdlcnByaW50IjogImNocm9tZSINCiAgICAgICAgfQ0KICAgICAgfSwNCiAgICAgICJ0cmFuc3BvcnQiOiB7DQogICAgICAgICJlYXJseV9kYXRhX2hlYWRlcl9uYW1lIjogIlNlYy1XZWJTb2NrZXQtUHJvdG9jb2wiLA0KICAgICAgICAiaGVhZGVycyI6IHsNCiAgICAgICAgICAiSG9zdCI6ICIjaG9zdE5hbWUjIg0KICAgICAgICB9LA0KICAgICAgICAicGF0aCI6ICIvIiwNCiAgICAgICAgInR5cGUiOiAid3MiDQogICAgICB9LA0KICAgICAgInR5cGUiOiAidHJvamFuIg0KICAgIH0';\r\n\tconst isCFworkersDomain = hostName.includes(base64Decode('d29ya2Vycy5kZXY')) ? true : false;\r\n\tfor (let addr of ipsArrayChunked) {\r\n\t\tif (!addr) continue;\r\n\t\tlet randomHttpPortElement = getRandomElement(HTTP_WITH_PORTS);\r\n\t\tlet randomHttpsPortElement = getRandomElement(HTTPS_WITH_PORTS);\r\n\t\tlet port =\r\n\t\t\t([0, ...HTTPS_WITH_PORTS].includes(Number(defaultPort)) && isCFworkersDomain) ||\r\n\t\t\t([0, ...HTTP_WITH_PORTS].includes(Number(defaultPort)) && !isCFworkersDomain)\r\n\t\t\t\t? isCFworkersDomain\r\n\t\t\t\t\t? randomHttpPortElement\r\n\t\t\t\t\t: randomHttpsPortElement\r\n\t\t\t\t: defaultPort;\r\n\t\tlet remarks = `cfwks-${addr}:${port}`;\r\n\t\tconst replacements = {\r\n\t\t\t'#password#': pswd,\r\n\t\t\t'#server#': addr,\r\n\t\t\t'#port#': port,\r\n\t\t\t'#hostName#': hostName,\r\n\t\t\t'#tagname#': remarks,\r\n\t\t\t'#onTls#': !isCFworkersDomain,\r\n\t\t};\r\n\t\t// \u4F7F\u7528(\u6B63\u5219+\u56DE\u8C03)\u66FF\u6362\u5BF9\u5E94\u7684\u5B57\u7B26\u4E32\uFF0C\u751F\u6210sing-box\u7684\u8282\u70B9\u4FE1\u606F\r\n\t\tconst regex = new RegExp(Object.keys(replacements).join('|'), 'g');\r\n\t\tconst outbdsValue = base64Decode(base64Json).replace(regex, (match) => replacements[match]);\r\n\t\tif (!nodeNames.includes(remarks)) {\r\n\t\t\toutbds.push(outbdsValue);\r\n\t\t\tnodeNames.push(remarks);\r\n\t\t}\r\n\t}\r\n\treturn [nodeNames, outbds];\r\n}\r\n\r\nmodule.exports = {\r\n\tgetBaseConfig,\r\n\tbuildLinks,\r\n\tbuildYamls,\r\n\tbuildJsons,\r\n};\r\n", "import { connect } from 'cloudflare:sockets';\nconst { hash224encrypt, isValidSHA224 } = require('./sha224');\nconst { splitArrayEvenly, isValidLandingAddress, parseLandingAddress } = require('./addressHandle');\nconst { fetchGitHubFile, fetchWebPageContent } = require('./crawler');\nconst { getBaseConfig, buildLinks, buildYamls, buildJsons } = require('./output');\nconst { base64Decode } = require('./base64');\n\nlet landingAddress = '';\n\nlet plaintextPassword = 'a1234567'; // \u660E\u6587\u5BC6\u7801\uFF0C\u6CA1\u6709\u7ECF\u8FC7sha224\u52A0\u5BC6\u7684\u5BC6\u7801\nlet sha224Password = hash224encrypt(plaintextPassword); // \u7ECF\u8FC7sha224\u52A0\u5BC6\u7684\u5BC6\u7801\n\nconst domainList = [\n\t'https://www.iq.com',\n\t'https://www.dell.com',\n\t'https://www.bilibili.com',\n\t'https://www.wix.com/',\n\t'https://landingsite.ai/',\n\t'https://vimeo.com/',\n\t'https://www.pexels.com/',\n\t'https://www.revid.ai/',\n];\n\nconst HTTP_WITH_PORTS = [80, 8080, 8880, 2052, 2082, 2086, 2095];\nconst HTTPS_WITH_PORTS = [443, 2053, 2083, 2087, 2096, 8443];\n\n// \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 \u8BE5\u53C2\u6570\u7528\u4E8E\u8BBF\u95EEGitHub\u7684\u79C1\u6709\u4ED3\u5E93\u6587\u4EF6 \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\nconst DEFAULT_GITHUB_TOKEN = ''; // GitHub\u7684\u4EE4\u724C\nconst DEFAULT_OWNER = ''; // GitHub\u7684\u7528\u6237\u540D\nconst DEFAULT_REPO = ''; // GitHub\u7684\u4ED3\u5E93\u540D\nconst DEFAULT_BRANCH = 'main'; // GitHub\u7684\u5206\u652F\u540D\nconst DEFAULT_FILE_PATH = 'README.md'; // GitHub\u7684\u6587\u4EF6\u8DEF\u5F84\n// \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nlet confTemplateUrl = 'https://raw.githubusercontent.com/juerson/cftrojan-tunnel/refs/heads/master/clashTemplate.yaml'; // clash\u6A21\u677F\nlet ipaddrURL = 'https://raw.githubusercontent.com/juerson/cftrojan-tunnel/refs/heads/master/ipaddr.txt';\n\nconst worker_default = {\n\t/**\n\t * @param {import(\"@cloudflare/workers-types\").Request} request\n\t * @param {{PASS_CODE: string, LANDING_ADDRESS: string}} env\n\t * @param {import(\"@cloudflare/workers-types\").ExecutionContext} ctx\n\t * @returns {Promise<Response>}\n\t */\n\tasync fetch(request, env, ctx) {\n\t\ttry {\n\t\t\t// \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 \u8BBF\u95EEGitHub\u7684\u79C1\u6709\u4ED3\u5E93\u6587\u4EF6 \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\t\t\tconst GITHUB_TOKEN = env.GITHUB_TOKEN || DEFAULT_GITHUB_TOKEN;\n\t\t\tconst OWNER = env.GITHUB_OWNER || DEFAULT_OWNER;\n\t\t\tconst REPO = env.GITHUB_REPO || DEFAULT_REPO;\n\t\t\tconst BRANCH = env.GITHUB_BRANCH || DEFAULT_BRANCH;\n\t\t\tconst FILE_PATH = env.GITHUB_FILE_PATH || DEFAULT_FILE_PATH;\n\t\t\t// \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\t\t\tlet configPassword = env.CONFIG_PASSWORD || '';\n\t\t\tlet subPassword = env.SUB_PASSWORD || '';\n\t\t\t// \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\t\t\tlandingAddress = env.LANDING_ADDRESS || landingAddress;\n\t\t\tlet password = env.PASS_CODE || plaintextPassword; // \u660E\u6587\u5BC6\u7801\uFF0C\u6CA1\u6709\u7ECF\u8FC7sha224\u52A0\u5BC6\u7684\u5BC6\u7801\n\t\t\tif (password !== plaintextPassword) {\n\t\t\t\tsha224Password = hash224encrypt(password);\n\t\t\t}\n\n\t\t\tif (!isValidSHA224(sha224Password)) {\n\t\t\t\tthrow new Error('sha224Password is not valid');\n\t\t\t}\n\n\t\t\tconst upgradeHeader = request.headers.get('Upgrade');\n\t\t\tconst url = new URL(request.url);\n\t\t\tif (!upgradeHeader || upgradeHeader !== 'websocket') {\n\t\t\t\tconst target = url.searchParams.get('target');\n\t\t\t\tconst hostName = url.searchParams.get('host') || url.hostname;\n\t\t\t\tlet pwdPassword = url.searchParams.get('pwd') || ''; // \u5BC6\u7801\n\t\t\t\tlet defaultPort = url.searchParams.get('port') || 0; // \u9ED8\u8BA4\u7AEF\u53E3\n\t\t\t\tlet page = url.searchParams.get('page') || 1; // \u4ECE1\u5F00\u59CB\u7684\u9875\u7801\n\n\t\t\t\tif (pwdPassword) {\n\t\t\t\t\tpwdPassword = encodeURIComponent(pwdPassword);\n\t\t\t\t\tsubPassword = encodeURIComponent(subPassword);\n\t\t\t\t\tconfigPassword = encodeURIComponent(configPassword);\n\t\t\t\t}\n\n\t\t\t\tswitch (url.pathname) {\n\t\t\t\t\tcase '/':\n\t\t\t\t\t\tconst randomDomain = domainList[Math.floor(Math.random() * domainList.length)];\n\t\t\t\t\t\tconst redirectResponse = new Response('', {\n\t\t\t\t\t\t\tstatus: 301,\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\tLocation: randomDomain,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn redirectResponse;\n\t\t\t\t\tcase `/config`:\n\t\t\t\t\t\tlet html_doc = ''; // \u8981\u663E\u793A\u7684\u7F51\u9875\u5185\u5BB9\n\t\t\t\t\t\tlet responseStatus = 200; // \u54CD\u5E94\u7684\u72B6\u6001\u7801\n\t\t\t\t\t\tif (pwdPassword === configPassword) {\n\t\t\t\t\t\t\thtml_doc = getBaseConfig(password, hostName);\n\t\t\t\t\t\t\tresponseStatus = 200;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\thtml_doc = '\u60A8\u65E0\u76F8\u5173\u7684\u6743\u9650\u8BBF\u95EE\uFF01'; // pwd\u5BC6\u7801\u8F93\u5165\u9519\u8BEF\uFF0C\u4E0D\u5141\u8BB8\u67E5\u770B\u914D\u7F6E\u4FE1\u606F\n\t\t\t\t\t\t\tresponseStatus = 404;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn new Response(html_doc, {\n\t\t\t\t\t\t\tstatus: responseStatus,\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t'Content-Type': 'text/plain;charset=utf-8',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\tcase '/sub':\n\t\t\t\t\t\tif (pwdPassword === subPassword) {\n\t\t\t\t\t\t\tlet ips_string = '';\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t// \u8BFB\u53D6 GitHub \u79C1\u6709\u4ED3\u5E93\u7684\u4F18\u9009IP\u6216\u57DF\u540D\uFF0C\u8BFB\u53D6\u4E0D\u5230\u5C31\u9ED8\u8BA4\u4E3A\u7A7A\u5B57\u7B26\u4E32\n\t\t\t\t\t\t\t\tconst fileContent = await fetchGitHubFile(GITHUB_TOKEN, OWNER, REPO, FILE_PATH, BRANCH);\n\t\t\t\t\t\t\t\tconst decoder = new TextDecoder('utf-8');\n\t\t\t\t\t\t\t\tips_string = decoder.decode(fileContent.body);\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tconsole.log(`Error: ${error.message}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// \u5982\u679C\u8BFB\u53D6\u5230GitHub\u79C1\u6709\u6587\u4EF6\u7684\u5185\u5BB9\u4E3A\u7A7A\u65F6\uFF0C\u5C31\u4F7F\u7528ipaddrURL\u7684IP\u5730\u5740\n\t\t\t\t\t\t\tips_string = ips_string !== '' ? ips_string : await fetchWebPageContent(ipaddrURL);\n\t\t\t\t\t\t\tif (ips_string.length == 0) {\n\t\t\t\t\t\t\t\treturn new Response('\u6570\u636E\u4E3A\u7A7A\uFF0C\u65E0\u6CD5\u751F\u6210\u8BA2\u9605\uFF01', {\n\t\t\t\t\t\t\t\t\tstatus: 200,\n\t\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\t'Content-Type': 'text/plain;charset=utf-8',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet ipsArray = ips_string\n\t\t\t\t\t\t\t\t.trim()\n\t\t\t\t\t\t\t\t.split(/\\r\\n|\\n|\\r/)\n\t\t\t\t\t\t\t\t.map((ip) => ip.trim());\n\n\t\t\t\t\t\t\tlet html_doc = '';\n\t\t\t\t\t\t\tif (target === base64Decode('djJyYXk')) {\n\t\t\t\t\t\t\t\t// v2ray\n\t\t\t\t\t\t\t\tlet maxNodeNumber = url.searchParams.get('maxNode') || url.searchParams.get('maxnode') || 1000;\n\t\t\t\t\t\t\t\tmaxNodeNumber = maxNodeNumber > 0 && maxNodeNumber <= 5000 ? maxNodeNumber : 1000;\n\t\t\t\t\t\t\t\t// splitArrayEvenly\u51FD\u6570\uFF1AipArray\u6570\u7EC4\u5206\u5272\u6210\u6BCF\u4E2A\u5B50\u6570\u7EC4\u90FD\u4E0D\u8D85\u8FC7maxNode\u7684\u6570\u7EC4(\u5B50\u6570\u7EC4\u4E4B\u95F4\u5143\u7D20\u4E2A\u6570\u5E73\u5747\u5206\u914D)\n\t\t\t\t\t\t\t\tlet chunkedArray = splitArrayEvenly(ipsArray, maxNodeNumber);\n\t\t\t\t\t\t\t\tlet totalPage = Math.ceil(ipsArray.length / maxNodeNumber); // \u8BA1\u7B97\u603B\u9875\u6570\n\t\t\t\t\t\t\t\tif (page > totalPage || page < 1) {\n\t\t\t\t\t\t\t\t\treturn new Response('The data is empty.', { status: 200 });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// \u4F7F\u7528\u54EA\u4E2A\u5B50\u6570\u7EC4\u7684\u6570\u636E\uFF1F\n\t\t\t\t\t\t\t\tlet ipsArrayChunked = chunkedArray[page - 1];\n\t\t\t\t\t\t\t\thtml_doc = buildLinks(ipsArrayChunked, hostName, password, defaultPort, HTTP_WITH_PORTS, HTTPS_WITH_PORTS);\n\t\t\t\t\t\t\t} else if (target === base64Decode('Y2xhc2g')) {\n\t\t\t\t\t\t\t\t// clash\n\t\t\t\t\t\t\t\t// ---------------------------------------------\n\t\t\t\t\t\t\t\t// \u5254\u9664workers.dev\u751F\u6210trojan\u534F\u8BAE\u7684clash\u8BA2\u9605\uFF0C\u65E0\u6CD5\u4F7F\u7528\u7684\u60C5\u51B5\u3002\n\t\t\t\t\t\t\t\tconst isCFworkersDomain = hostName.endsWith(base64Decode('d29ya2Vycy5kZXY')) ? true : false;\n\t\t\t\t\t\t\t\tif (isCFworkersDomain) {\n\t\t\t\t\t\t\t\t\thtml_doc = base64Decode(\n\t\t\t\t\t\t\t\t\t\t'6K2m5ZGK77ya5L2/55So5Z+f5ZCNI2hvc3ROYW1lI+eUn+aIkOeahGNsYXNo6K6i6ZiF5peg5rOV5L2/55So77yB57uI5q2i5pON5L2c44CC'\n\t\t\t\t\t\t\t\t\t).replace('#hostName#', hostName);\n\t\t\t\t\t\t\t\t\treturn new Response(html_doc, {\n\t\t\t\t\t\t\t\t\t\tstatus: 200,\n\t\t\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\t\t'Content-Type': 'text/plain;charset=utf-8',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// ---------------------------------------------\n\t\t\t\t\t\t\t\tlet maxNode = url.searchParams.get('maxNode') || url.searchParams.get('maxnode') || 300;\n\t\t\t\t\t\t\t\tmaxNode = maxNode > 0 && maxNode <= 1000 ? maxNode : 300;\n\t\t\t\t\t\t\t\tlet chunkedArray = splitArrayEvenly(ipsArray, maxNode);\n\t\t\t\t\t\t\t\tlet totalPage = Math.ceil(ipsArray.length / maxNode);\n\t\t\t\t\t\t\t\tif (page > totalPage || page < 1) {\n\t\t\t\t\t\t\t\t\treturn new Response('The data is empty.', { status: 200 });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlet ipsArrayChunked = chunkedArray[page - 1];\n\t\t\t\t\t\t\t\tlet [nodeNames, proxyies] = buildYamls(ipsArrayChunked, hostName, password, defaultPort, HTTP_WITH_PORTS, HTTPS_WITH_PORTS);\n\t\t\t\t\t\t\t\tlet confTemplate = await fetchWebPageContent(confTemplateUrl);\n\t\t\t\t\t\t\t\tif (nodeNames) {\n\t\t\t\t\t\t\t\t\t// \u66FF\u6362clash\u6A21\u677F\u4E2D\u7684\u5BF9\u5E94\u7684\u5B57\u7B26\u4E32\uFF0C\u751F\u6210clash\u914D\u7F6E\u6587\u4EF6\n\t\t\t\t\t\t\t\t\tlet replaceProxyies = confTemplate.replace(\n\t\t\t\t\t\t\t\t\t\tnew RegExp(\n\t\t\t\t\t\t\t\t\t\t\tatob(\n\t\t\t\t\t\t\t\t\t\t\t\t'ICAtIHtuYW1lOiAwMSwgc2VydmVyOiAxMjcuMC4wLjEsIHBvcnQ6IDgwLCB0eXBlOiBzcywgY2lwaGVyOiBhZXMtMTI4LWdjbSwgcGFzc3dvcmQ6IGExMjM0NTZ9'\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t'g'\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tproxyies.join('\\n')\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\thtml_doc = replaceProxyies.replace(\n\t\t\t\t\t\t\t\t\t\tnew RegExp(atob('ICAgICAgLSAwMQ=='), 'g'),\n\t\t\t\t\t\t\t\t\t\tnodeNames.map((ipWithPort) => `      - ${ipWithPort}`).join('\\n')\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (target === base64Decode('c2luZ2JveA')) {\n\t\t\t\t\t\t\t\t// singbox\n\t\t\t\t\t\t\t\tlet maxNode = url.searchParams.get('maxNode') || url.searchParams.get('maxnode') || 50;\n\t\t\t\t\t\t\t\tmaxNode = maxNode > 0 && maxNode <= 100 ? maxNode : 50;\n\t\t\t\t\t\t\t\tlet chunkedArray = splitArrayEvenly(ipsArray, maxNode);\n\t\t\t\t\t\t\t\tlet totalPage = Math.ceil(ipsArray.length / maxNode);\n\t\t\t\t\t\t\t\tif (page > totalPage || page < 1) {\n\t\t\t\t\t\t\t\t\treturn new Response('The data is empty.', { status: 200 });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlet ipsArrayChunked = chunkedArray[page - 1];\n\t\t\t\t\t\t\t\tlet [_, outbds] = buildJsons(ipsArrayChunked, hostName, password, defaultPort, HTTP_WITH_PORTS, HTTPS_WITH_PORTS);\n\t\t\t\t\t\t\t\thtml_doc = base64Decode('ew0KICAib3V0Ym91bmRzIjogWw0KI291dGJkcyMNCiAgXQ0KfQ').replace('#outbds#', outbds.join(',\\n'));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!html_doc || html_doc.trim().length === 0) {\n\t\t\t\t\t\t\t\thtml_doc = '\u53D1\u751F\u672A\u77E5\u9519\u8BEF\uFF01';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn new Response(html_doc, {\n\t\t\t\t\t\t\t\tstatus: 200,\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t'Content-Type': 'text/plain;charset=utf-8',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn new Response('\u60A8\u65E0\u76F8\u5173\u7684\u6743\u9650\u8BBF\u95EE\uFF01', {\n\t\t\t\t\t\t\tstatus: 404,\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t'Content-Type': 'text/plain;charset=utf-8',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst pathString = url.pathname;\n\t\t\t\tif (pathString.includes('/pyip=')) {\n\t\t\t\t\tconst pathLandingAddress = pathString.split('=')[1];\n\t\t\t\t\tif (isValidLandingAddress(pathLandingAddress)) {\n\t\t\t\t\t\tlandingAddress = pathLandingAddress;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn await a1(request);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tlet e = err;\n\t\t\treturn new Response(e.toString());\n\t\t}\n\t},\n};\n\nasync function a1(request) {\n\tconst webSocketPair = new WebSocketPair();\n\tconst [client, webSocket] = Object.values(webSocketPair);\n\twebSocket.accept();\n\tlet address = '';\n\tlet portWithRandomLog = '';\n\tconst log = (info, event) => {\n\t\tconsole.log(`[${address}:${portWithRandomLog}] ${info}`, event || '');\n\t};\n\tconst earlyDataHeader = request.headers.get('sec-websocket-protocol') || '';\n\tconst readableWebSocketStream = makeReadableWebSocketStream(webSocket, earlyDataHeader, log);\n\tlet remoteSocketWapper = {\n\t\tvalue: null,\n\t};\n\tlet udpStreamWrite = null;\n\n\treadableWebSocketStream\n\t\t.pipeTo(\n\t\t\tnew WritableStream({\n\t\t\t\tasync write(chunk, controller) {\n\t\t\t\t\tif (udpStreamWrite) {\n\t\t\t\t\t\treturn udpStreamWrite(chunk);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (remoteSocketWapper.value) {\n\t\t\t\t\t\tconst writer = remoteSocketWapper.value.writable.getWriter();\n\t\t\t\t\t\tawait writer.write(chunk);\n\t\t\t\t\t\twriter.releaseLock();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { hasError, message, addressRemote = '', portRemote = 443, rawClientData } = await parseTr0janHeader(chunk);\n\n\t\t\t\t\tif (hasError) {\n\t\t\t\t\t\tthrow new Error(message);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\taddress = addressRemote;\n\t\t\t\t\tportWithRandomLog = `${portRemote}--${Math.random()} tcp`;\n\n\t\t\t\t\thandleTCPOutBound(remoteSocketWapper, addressRemote, portRemote, rawClientData, webSocket, log);\n\t\t\t\t},\n\t\t\t\tclose() {\n\t\t\t\t\tlog(`readableWebSocketStream is closed`);\n\t\t\t\t},\n\t\t\t\tabort(reason) {\n\t\t\t\t\tlog(`readableWebSocketStream is aborted`, JSON.stringify(reason));\n\t\t\t\t},\n\t\t\t})\n\t\t)\n\t\t.catch((err) => {\n\t\t\tlog('readableWebSocketStream pipeTo error', err);\n\t\t});\n\treturn new Response(null, {\n\t\tstatus: 101,\n\t\twebSocket: client,\n\t});\n}\n\nasync function parseTr0janHeader(buffer) {\n\tif (buffer.byteLength < 56) {\n\t\treturn {\n\t\t\thasError: true,\n\t\t\tmessage: 'invalid data',\n\t\t};\n\t}\n\tlet crLfIndex = 56;\n\tif (new Uint8Array(buffer.slice(56, 57))[0] !== 0x0d || new Uint8Array(buffer.slice(57, 58))[0] !== 0x0a) {\n\t\treturn {\n\t\t\thasError: true,\n\t\t\tmessage: 'invalid header format (missing CR LF)',\n\t\t};\n\t}\n\tconst password = new TextDecoder().decode(buffer.slice(0, crLfIndex));\n\tif (password !== sha224Password) {\n\t\treturn {\n\t\t\thasError: true,\n\t\t\tmessage: 'invalid password',\n\t\t};\n\t}\n\n\tconst socks5DataBuffer = buffer.slice(crLfIndex + 2);\n\tif (socks5DataBuffer.byteLength < 6) {\n\t\treturn {\n\t\t\thasError: true,\n\t\t\tmessage: 'invalid SOCKS5 request data',\n\t\t};\n\t}\n\n\tconst view = new DataView(socks5DataBuffer);\n\tconst cmd = view.getUint8(0);\n\tif (cmd !== 1) {\n\t\treturn {\n\t\t\thasError: true,\n\t\t\tmessage: 'unsupported command, only TCP (CONNECT) is allowed',\n\t\t};\n\t}\n\n\tconst atype = view.getUint8(1);\n\t// 0x01: IPv4 address\n\t// 0x03: Domain name\n\t// 0x04: IPv6 address\n\tlet addressLength = 0;\n\tlet addressIndex = 2;\n\tlet address = '';\n\tswitch (atype) {\n\t\tcase 1:\n\t\t\taddressLength = 4;\n\t\t\taddress = new Uint8Array(socks5DataBuffer.slice(addressIndex, addressIndex + addressLength)).join('.');\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\taddressLength = new Uint8Array(socks5DataBuffer.slice(addressIndex, addressIndex + 1))[0];\n\t\t\taddressIndex += 1;\n\t\t\taddress = new TextDecoder().decode(socks5DataBuffer.slice(addressIndex, addressIndex + addressLength));\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\taddressLength = 16;\n\t\t\tconst dataView = new DataView(socks5DataBuffer.slice(addressIndex, addressIndex + addressLength));\n\t\t\tconst ipv6 = [];\n\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\tipv6.push(dataView.getUint16(i * 2).toString(16));\n\t\t\t}\n\t\t\taddress = ipv6.join(':');\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn {\n\t\t\t\thasError: true,\n\t\t\t\tmessage: `invalid addressType is ${atype}`,\n\t\t\t};\n\t}\n\n\tif (!address) {\n\t\treturn {\n\t\t\thasError: true,\n\t\t\tmessage: `address is empty, addressType is ${atype}`,\n\t\t};\n\t}\n\n\tconst portIndex = addressIndex + addressLength;\n\tconst portBuffer = socks5DataBuffer.slice(portIndex, portIndex + 2);\n\tconst portRemote = new DataView(portBuffer).getUint16(0);\n\treturn {\n\t\thasError: false,\n\t\taddressRemote: address,\n\t\tportRemote,\n\t\trawClientData: socks5DataBuffer.slice(portIndex + 4),\n\t};\n}\n\nasync function handleTCPOutBound(remoteSocket, addressRemote, portRemote, rawClientData, webSocket, log) {\n\tasync function connectAndWrite(address, port) {\n\t\tlet tcpSocket2 = connect({\n\t\t\thostname: address,\n\t\t\tport: port,\n\t\t});\n\t\tremoteSocket.value = tcpSocket2;\n\t\t// log(`connected to ${address}:${port}`);\n\t\tconst writer = tcpSocket2.writable.getWriter();\n\t\tawait writer.write(rawClientData);\n\t\twriter.releaseLock();\n\t\treturn tcpSocket2;\n\t}\n\tasync function retry() {\n\t\t// \u5206\u79BBlandingAddress\u7684host\u548Cport\u7AEF\u53E3\uFF08\u652F\u6301\"\u57DF\u540D\u3001IPv4\u3001[IPv6]\u3001\u57DF\u540D:\u7AEF\u53E3\u3001IPv4:\u7AEF\u53E3\u3001[IPv6]:\u7AEF\u53E3\"\uFF09\n\t\tlet landingAddressJson = parseLandingAddress(landingAddress);\n\t\tlet host = landingAddressJson.host || addressRemote;\n\t\tlet port = landingAddressJson.port || portRemote;\n\n\t\tconst tcpSocket2 = await connectAndWrite(host, port);\n\t\ttcpSocket2.closed\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log('retry tcpSocket closed error', error);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tsafeCloseWebSocket(webSocket);\n\t\t\t});\n\t\tremoteSocketToWS(tcpSocket2, webSocket, null, log);\n\t}\n\tconst tcpSocket2 = await connectAndWrite(addressRemote, portRemote);\n\tremoteSocketToWS(tcpSocket2, webSocket, retry, log);\n}\n\nfunction makeReadableWebSocketStream(webSocketServer, earlyDataHeader, log) {\n\tlet readableStreamCancel = false;\n\tconst stream = new ReadableStream({\n\t\tstart(controller) {\n\t\t\twebSocketServer.addEventListener('message', (event) => {\n\t\t\t\tif (readableStreamCancel) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst message = event.data;\n\t\t\t\tcontroller.enqueue(message);\n\t\t\t});\n\t\t\twebSocketServer.addEventListener('close', () => {\n\t\t\t\tsafeCloseWebSocket(webSocketServer);\n\t\t\t\tif (readableStreamCancel) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcontroller.close();\n\t\t\t});\n\t\t\twebSocketServer.addEventListener('error', (err) => {\n\t\t\t\tlog('webSocketServer error');\n\t\t\t\tcontroller.error(err);\n\t\t\t});\n\t\t\tconst { earlyData, error } = base64ToArrayBuffer(earlyDataHeader);\n\t\t\tif (error) {\n\t\t\t\tcontroller.error(error);\n\t\t\t} else if (earlyData) {\n\t\t\t\tcontroller.enqueue(earlyData);\n\t\t\t}\n\t\t},\n\t\tpull(controller) {},\n\t\tcancel(reason) {\n\t\t\tif (readableStreamCancel) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlog(`readableStream was canceled, due to ${reason}`);\n\t\t\treadableStreamCancel = true;\n\t\t\tsafeCloseWebSocket(webSocketServer);\n\t\t},\n\t});\n\treturn stream;\n}\n\nasync function remoteSocketToWS(remoteSocket, webSocket, retry, log) {\n\tlet hasIncomingData = false;\n\tawait remoteSocket.readable\n\t\t.pipeTo(\n\t\t\tnew WritableStream({\n\t\t\t\tstart() {},\n\t\t\t\t/**\n\t\t\t\t * @param {Uint8Array} chunk\n\t\t\t\t * @param {*} controller\n\t\t\t\t */\n\t\t\t\tasync write(chunk, controller) {\n\t\t\t\t\thasIncomingData = true;\n\t\t\t\t\tif (webSocket.readyState !== WS_READY_STATE_OPEN) {\n\t\t\t\t\t\tcontroller.error('webSocket connection is not open');\n\t\t\t\t\t}\n\t\t\t\t\twebSocket.send(chunk);\n\t\t\t\t},\n\t\t\t\tclose() {\n\t\t\t\t\tlog(`remoteSocket.readable is closed, hasIncomingData: ${hasIncomingData}`);\n\t\t\t\t},\n\t\t\t\tabort(reason) {\n\t\t\t\t\tconsole.error('remoteSocket.readable abort', reason);\n\t\t\t\t},\n\t\t\t})\n\t\t)\n\t\t.catch((error) => {\n\t\t\tconsole.error(`remoteSocketToWS error:`, error.stack || error);\n\t\t\tsafeCloseWebSocket(webSocket);\n\t\t});\n\tif (hasIncomingData === false && retry) {\n\t\tlog(`retry`);\n\t\tretry();\n\t}\n}\n\nfunction base64ToArrayBuffer(base64Str) {\n\tif (!base64Str) {\n\t\treturn {\n\t\t\terror: null,\n\t\t};\n\t}\n\ttry {\n\t\tbase64Str = base64Str.replace(/-/g, '+').replace(/_/g, '/');\n\t\tconst decode = atob(base64Str);\n\t\tconst arryBuffer = Uint8Array.from(decode, (c) => c.charCodeAt(0));\n\t\treturn {\n\t\t\tearlyData: arryBuffer.buffer,\n\t\t\terror: null,\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\terror,\n\t\t};\n\t}\n}\n\nlet WS_READY_STATE_OPEN = 1;\nlet WS_READY_STATE_CLOSING = 2;\n\nfunction safeCloseWebSocket(socket) {\n\ttry {\n\t\tif (socket.readyState === WS_READY_STATE_OPEN || socket.readyState === WS_READY_STATE_CLOSING) {\n\t\t\tsocket.close();\n\t\t}\n\t} catch (error) {\n\t\tconsole.error('safeCloseWebSocket error', error);\n\t}\n}\n\nexport { worker_default as default };\n"],
  "mappings": "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",
  "names": ["Buffer", "blocks", "exports", "hash224encrypt", "isValidSHA224", "splitArrayEvenly", "host", "fetchGitHubFile", "fetchWebPageContent", "URL", "base64Decode", "base64Decode", "getBaseConfig", "host", "buildLinks", "HTTP_WITH_PORTS", "HTTPS_WITH_PORTS", "buildYamls", "buildJsons", "html_doc", "tcpSocket2", "host"]
}
